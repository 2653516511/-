{
    parent: undefined,
    store: Map {},
    devServer: {
      parent: [Circular],
      store: Map {},
      allowedHosts: { parent: [Circular], store: Set {} },
      shorthands: [
        'after',            'before',             'bonjour',
        'clientLogLevel',   'color',              'compress',
        'contentBase',      'disableHostCheck',   'filename',
        'headers',          'historyApiFallback', 'host',
        'hot',              'hotOnly',            'http2',
        'https',            'index',              'info',
        'inline',           'lazy',               'mimeTypes',
        'noInfo',           'open',               'openPage',
        'overlay',          'pfx',                'pfxPassphrase',
        'port',             'proxy',              'progress',
        'public',           'publicPath',         'quiet',
        'setup',            'socket',             'sockHost',
        'sockPath',         'sockPort',           'staticOptions',
        'stats',            'stdin',              'useLocalIp',
        'watchContentBase', 'watchOptions',       'writeToDisk'
      ],
      after: [Function],
      before: [Function],
      bonjour: [Function],
      clientLogLevel: [Function],
      color: [Function],
      compress: [Function],
      contentBase: [Function],
      disableHostCheck: [Function],
      filename: [Function],
      headers: [Function],
      historyApiFallback: [Function],
      host: [Function],
      hot: [Function],
      hotOnly: [Function],
      http2: [Function],
      https: [Function],
      index: [Function],
      info: [Function],
      inline: [Function],
      lazy: [Function],
      mimeTypes: [Function],
      noInfo: [Function],
      open: [Function],
      openPage: [Function],
      overlay: [Function],
      pfx: [Function],
      pfxPassphrase: [Function],
      port: [Function],
      proxy: [Function],
      progress: [Function],
      public: [Function],
      publicPath: [Function],
      quiet: [Function],
      setup: [Function],
      socket: [Function],
      sockHost: [Function],
      sockPath: [Function],
      sockPort: [Function],
      staticOptions: [Function],
      stats: [Function],
      stdin: [Function],
      useLocalIp: [Function],
      watchContentBase: [Function],
      watchOptions: [Function],
      writeToDisk: [Function]
    },
    entryPoints: { parent: [Circular], store: Map {} },
    module: {
      parent: [Circular],
      store: Map {},
      rules: { parent: [Circular], store: Map {} },
      defaultRules: { parent: [Circular], store: Map {} },
      shorthands: [ 'noParse', 'strictExportPresence' ],
      noParse: [Function],
      strictExportPresence: [Function]
    },
    node: { parent: [Circular], store: Map {} },
    optimization: {
      parent: [Circular],
      store: Map {},
      minimizers: { parent: [Circular], store: Map {} },
      shorthands: [
        'concatenateModules',
        'flagIncludedChunks',
        'mergeDuplicateChunks',
        'minimize',
        'namedChunks',
        'namedModules',
        'nodeEnv',
        'noEmitOnErrors',
        'occurrenceOrder',
        'portableRecords',
        'providedExports',
        'removeAvailableModules',
        'removeEmptyChunks',
        'runtimeChunk',
        'sideEffects',
        'splitChunks',
        'usedExports'
      ],
      concatenateModules: [Function],
      flagIncludedChunks: [Function],
      mergeDuplicateChunks: [Function],
      minimize: [Function],
      namedChunks: [Function],
      namedModules: [Function],
      nodeEnv: [Function],
      noEmitOnErrors: [Function],
      occurrenceOrder: [Function],
      portableRecords: [Function],
      providedExports: [Function],
      removeAvailableModules: [Function],
      removeEmptyChunks: [Function],
      runtimeChunk: [Function],
      sideEffects: [Function],
      splitChunks: [Function],
      usedExports: [Function]
    },
    output: {
      parent: [Circular],
      store: Map {},
      shorthands: [
        'auxiliaryComment',
        'chunkCallbackName',
        'chunkFilename',
        'chunkLoadTimeout',
        'crossOriginLoading',
        'devtoolFallbackModuleFilenameTemplate',
        'devtoolLineToLine',
        'devtoolModuleFilenameTemplate',
        'devtoolNamespace',
        'filename',
        'futureEmitAssets',
        'globalObject',
        'hashDigest',
        'hashDigestLength',
        'hashFunction',
        'hashSalt',
        'hotUpdateChunkFilename',
        'hotUpdateFunction',
        'hotUpdateMainFilename',
        'jsonpFunction',
        'library',
        'libraryExport',
        'libraryTarget',
        'path',
        'pathinfo',
        'publicPath',
        'sourceMapFilename',
        'sourcePrefix',
        'strictModuleExceptionHandling',
        'umdNamedDefine',
        'webassemblyModuleFilename'
      ],
      auxiliaryComment: [Function],
      chunkCallbackName: [Function],
      chunkFilename: [Function],
      chunkLoadTimeout: [Function],
      crossOriginLoading: [Function],
      devtoolFallbackModuleFilenameTemplate: [Function],
      devtoolLineToLine: [Function],
      devtoolModuleFilenameTemplate: [Function],
      devtoolNamespace: [Function],
      filename: [Function],
      futureEmitAssets: [Function],
      globalObject: [Function],
      hashDigest: [Function],
      hashDigestLength: [Function],
      hashFunction: [Function],
      hashSalt: [Function],
      hotUpdateChunkFilename: [Function],
      hotUpdateFunction: [Function],
      hotUpdateMainFilename: [Function],
      jsonpFunction: [Function],
      library: [Function],
      libraryExport: [Function],
      libraryTarget: [Function],
      path: [Function],
      pathinfo: [Function],
      publicPath: [Function],
      sourceMapFilename: [Function],
      sourcePrefix: [Function],
      strictModuleExceptionHandling: [Function],
      umdNamedDefine: [Function],
      webassemblyModuleFilename: [Function]
    },
    performance: {
      parent: [Circular],
      store: Map {},
      shorthands: [ 'assetFilter', 'hints', 'maxAssetSize', 'maxEntrypointSize' ],
      assetFilter: [Function],
      hints: [Function],
      maxAssetSize: [Function],
      maxEntrypointSize: [Function]
    },
    plugins: { parent: [Circular], store: Map {} },
    resolve: {
      parent: [Circular],
      store: Map {},
      alias: { parent: [Circular], store: Map {} },
      aliasFields: { parent: [Circular], store: Set {} },
      descriptionFiles: { parent: [Circular], store: Set {} },
      extensions: { parent: [Circular], store: Set {} },
      mainFields: { parent: [Circular], store: Set {} },
      mainFiles: { parent: [Circular], store: Set {} },
      modules: { parent: [Circular], store: Set {} },
      plugins: { parent: [Circular], store: Map {} },
      shorthands: [
        'cachePredicate',
        'cacheWithContext',
        'concord',
        'enforceExtension',
        'enforceModuleExtension',
        'symlinks',
        'unsafeCache'
      ],
      cachePredicate: [Function],
      cacheWithContext: [Function],
      concord: [Function],
      enforceExtension: [Function],
      enforceModuleExtension: [Function],
      symlinks: [Function],
      unsafeCache: [Function]
    },
    resolveLoader: {
      parent: [Circular],
      store: Map {},
      alias: { parent: [Circular], store: Map {} },
      aliasFields: { parent: [Circular], store: Set {} },
      descriptionFiles: { parent: [Circular], store: Set {} },
      extensions: { parent: [Circular], store: Set {} },
      mainFields: { parent: [Circular], store: Set {} },
      mainFiles: { parent: [Circular], store: Set {} },
      modules: { parent: [Circular], store: Set {} },
      plugins: { parent: [Circular], store: Map {} },
      shorthands: [
        'cachePredicate',
        'cacheWithContext',
        'concord',
        'enforceExtension',
        'enforceModuleExtension',
        'symlinks',
        'unsafeCache'
      ],
      cachePredicate: [Function],
      cacheWithContext: [Function],
      concord: [Function],
      enforceExtension: [Function],
      enforceModuleExtension: [Function],
      symlinks: [Function],
      unsafeCache: [Function],
      moduleExtensions: { parent: [Circular], store: Set {} },
      packageMains: { parent: [Circular], store: Set {} }
    },
    shorthands: [
      'amd',         'bail',
      'cache',       'context',
      'devtool',     'externals',
      'loader',      'mode',
      'name',        'parallelism',
      'profile',     'recordsInputPath',
      'recordsPath', 'recordsOutputPath',
      'stats',       'target',
      'watch',       'watchOptions'
    ],
    amd: [Function],
    bail: [Function],
    cache: [Function],
    context: [Function],
    devtool: [Function],
    externals: [Function],
    loader: [Function],
    mode: [Function],
    name: [Function],
    parallelism: [Function],
    profile: [Function],
    recordsInputPath: [Function],
    recordsPath: [Function],
    recordsOutputPath: [Function],
    stats: [Function],
    target: [Function],
    watch: [Function],
    watchOptions: [Function]
  }






  {
  parent: undefined,
  store: Map {
    'mode' => 'production',
    'context' => '/Users/zhoujy/Developer/open-platform-site',
    'devtool' => 'hidden-source-map'
  },
  devServer: {
    parent: [Circular],
    store: Map {},
    allowedHosts: { parent: [Circular], store: Set {} },
    shorthands: [
      'after',            'before',             'bonjour',
      'clientLogLevel',   'color',              'compress',
      'contentBase',      'disableHostCheck',   'filename',
      'headers',          'historyApiFallback', 'host',
      'hot',              'hotOnly',            'http2',
      'https',            'index',              'info',
      'inline',           'lazy',               'mimeTypes',
      'noInfo',           'open',               'openPage',
      'overlay',          'pfx',                'pfxPassphrase',
      'port',             'proxy',              'progress',
      'public',           'publicPath',         'quiet',
      'setup',            'socket',             'sockHost',
      'sockPath',         'sockPort',           'staticOptions',
      'stats',            'stdin',              'useLocalIp',
      'watchContentBase', 'watchOptions',       'writeToDisk'
    ],
    after: [Function],
    before: [Function],
    bonjour: [Function],
    clientLogLevel: [Function],
    color: [Function],
    compress: [Function],
    contentBase: [Function],
    disableHostCheck: [Function],
    filename: [Function],
    headers: [Function],
    historyApiFallback: [Function],
    host: [Function],
    hot: [Function],
    hotOnly: [Function],
    http2: [Function],
    https: [Function],
    index: [Function],
    info: [Function],
    inline: [Function],
    lazy: [Function],
    mimeTypes: [Function],
    noInfo: [Function],
    open: [Function],
    openPage: [Function],
    overlay: [Function],
    pfx: [Function],
    pfxPassphrase: [Function],
    port: [Function],
    proxy: [Function],
    progress: [Function],
    public: [Function],
    publicPath: [Function],
    quiet: [Function],
    setup: [Function],
    socket: [Function],
    sockHost: [Function],
    sockPath: [Function],
    sockPort: [Function],
    staticOptions: [Function],
    stats: [Function],
    stdin: [Function],
    useLocalIp: [Function],
    watchContentBase: [Function],
    watchOptions: [Function],
    writeToDisk: [Function]
  },
  entryPoints: { parent: [Circular], store: Map { 'index' => [Object] } },
  module: {
    parent: [Circular],
    store: Map {
      'noParse' => /^(vue|vue-router|vuex|vuex-router-sync|react|react-dom)$/
    },
    rules: { parent: [Circular], store: [Map] },
    defaultRules: { parent: [Circular], store: Map {} },
    shorthands: [ 'noParse', 'strictExportPresence' ],
    noParse: [Function],
    strictExportPresence: [Function]
  },
  node: {
    parent: [Circular],
    store: Map {
      'setImmediate' => false,
      'process' => 'mock',
      'dgram' => 'empty',
      'fs' => 'empty',
      'net' => 'empty',
      'tls' => 'empty',
      'child_process' => 'empty'
    }
  },
  optimization: {
    parent: [Circular],
    store: Map { 'splitChunks' => [Object], 'runtimeChunk' => [Object] },
    minimizers: { parent: [Circular], store: Map {} },
    shorthands: [
      'concatenateModules',
      'flagIncludedChunks',
      'mergeDuplicateChunks',
      'minimize',
      'namedChunks',
      'namedModules',
      'nodeEnv',
      'noEmitOnErrors',
      'occurrenceOrder',
      'portableRecords',
      'providedExports',
      'removeAvailableModules',
      'removeEmptyChunks',
      'runtimeChunk',
      'sideEffects',
      'splitChunks',
      'usedExports'
    ],
    concatenateModules: [Function],
    flagIncludedChunks: [Function],
    mergeDuplicateChunks: [Function],
    minimize: [Function],
    namedChunks: [Function],
    namedModules: [Function],
    nodeEnv: [Function],
    noEmitOnErrors: [Function],
    occurrenceOrder: [Function],
    portableRecords: [Function],
    providedExports: [Function],
    removeAvailableModules: [Function],
    removeEmptyChunks: [Function],
    runtimeChunk: [Function],
    sideEffects: [Function],
    splitChunks: [Function],
    usedExports: [Function]
  },
  output: {
    parent: [Circular],
    store: Map {
      'path' => '/Users/zhoujy/Developer/open-platform-site/build',
      'filename' => 'static/js/[name].[hash:8].js',
      'publicPath' => 'https://s04.cdn.ipalfish.com/open-platform-site/',
      'chunkFilename' => 'static/js/[name].[hash:8].js'
    },
    shorthands: [
      'auxiliaryComment',
      'chunkCallbackName',
      'chunkFilename',
      'chunkLoadTimeout',
      'crossOriginLoading',
      'devtoolFallbackModuleFilenameTemplate',
      'devtoolLineToLine',
      'devtoolModuleFilenameTemplate',
      'devtoolNamespace',
      'filename',
      'futureEmitAssets',
      'globalObject',
      'hashDigest',
      'hashDigestLength',
      'hashFunction',
      'hashSalt',
      'hotUpdateChunkFilename',
      'hotUpdateFunction',
      'hotUpdateMainFilename',
      'jsonpFunction',
      'library',
      'libraryExport',
      'libraryTarget',
      'path',
      'pathinfo',
      'publicPath',
      'sourceMapFilename',
      'sourcePrefix',
      'strictModuleExceptionHandling',
      'umdNamedDefine',
      'webassemblyModuleFilename'
    ],
    auxiliaryComment: [Function],
    chunkCallbackName: [Function],
    chunkFilename: [Function],
    chunkLoadTimeout: [Function],
    crossOriginLoading: [Function],
    devtoolFallbackModuleFilenameTemplate: [Function],
    devtoolLineToLine: [Function],
    devtoolModuleFilenameTemplate: [Function],
    devtoolNamespace: [Function],
    filename: [Function],
    futureEmitAssets: [Function],
    globalObject: [Function],
    hashDigest: [Function],
    hashDigestLength: [Function],
    hashFunction: [Function],
    hashSalt: [Function],
    hotUpdateChunkFilename: [Function],
    hotUpdateFunction: [Function],
    hotUpdateMainFilename: [Function],
    jsonpFunction: [Function],
    library: [Function],
    libraryExport: [Function],
    libraryTarget: [Function],
    path: [Function],
    pathinfo: [Function],
    publicPath: [Function],
    sourceMapFilename: [Function],
    sourcePrefix: [Function],
    strictModuleExceptionHandling: [Function],
    umdNamedDefine: [Function],
    webassemblyModuleFilename: [Function]
  },
  performance: {
    parent: [Circular],
    store: Map {},
    shorthands: [ 'assetFilter', 'hints', 'maxAssetSize', 'maxEntrypointSize' ],
    assetFilter: [Function],
    hints: [Function],
    maxAssetSize: [Function],
    maxEntrypointSize: [Function]
  },
  plugins: {
    parent: [Circular],
    store: Map {
      'define' => [Object],
      'case-sensitive-paths' => [Object],
      'friendly-errors' => [Object],
      'extract-css' => [Object],
      'hash-module-ids' => [Object],
      'inlineChunkHtml' => [Object],
      'named-chunks' => [Object],
      'html' => [Object],
      'preload' => [Object],
      'prefetch' => [Object],
      'replace-html' => [Object],
      'copy' => [Object],
      'hardDisk' => [Object],
      'moduleNotFound' => [Object],
      'ignore' => [Object],
      'forkTsChecker' => [Object]
    }
  },
  resolve: {
    parent: [Circular],
    store: Map {},
    alias: { parent: [Circular], store: [Map] },
    aliasFields: { parent: [Circular], store: Set {} },
    descriptionFiles: { parent: [Circular], store: Set {} },
    extensions: { parent: [Circular], store: [Set] },
    mainFields: { parent: [Circular], store: Set {} },
    mainFiles: { parent: [Circular], store: Set {} },
    modules: { parent: [Circular], store: [Set] },
    plugins: { parent: [Circular], store: [Map] },
    shorthands: [
      'cachePredicate',
      'cacheWithContext',
      'concord',
      'enforceExtension',
      'enforceModuleExtension',
      'symlinks',
      'unsafeCache'
    ],
    cachePredicate: [Function],
    cacheWithContext: [Function],
    concord: [Function],
    enforceExtension: [Function],
    enforceModuleExtension: [Function],
    symlinks: [Function],
    unsafeCache: [Function]
  },
  resolveLoader: {
    parent: [Circular],
    store: Map {},
    alias: { parent: [Circular], store: Map {} },
    aliasFields: { parent: [Circular], store: Set {} },
    descriptionFiles: { parent: [Circular], store: Set {} },
    extensions: { parent: [Circular], store: Set {} },
    mainFields: { parent: [Circular], store: Set {} },
    mainFiles: { parent: [Circular], store: Set {} },
    modules: { parent: [Circular], store: [Set] },
    plugins: { parent: [Circular], store: [Map] },
    shorthands: [
      'cachePredicate',
      'cacheWithContext',
      'concord',
      'enforceExtension',
      'enforceModuleExtension',
      'symlinks',
      'unsafeCache'
    ],
    cachePredicate: [Function],
    cacheWithContext: [Function],
    concord: [Function],
    enforceExtension: [Function],
    enforceModuleExtension: [Function],
    symlinks: [Function],
    unsafeCache: [Function],
    moduleExtensions: { parent: [Circular], store: Set {} },
    packageMains: { parent: [Circular], store: Set {} }
  },
  shorthands: [
    'amd',         'bail',
    'cache',       'context',
    'devtool',     'externals',
    'loader',      'mode',
    'name',        'parallelism',
    'profile',     'recordsInputPath',
    'recordsPath', 'recordsOutputPath',
    'stats',       'target',
    'watch',       'watchOptions'
  ],
  amd: [Function],
  bail: [Function],
  cache: [Function],
  context: [Function],
  devtool: [Function],
  externals: [Function],
  loader: [Function],
  mode: [Function],
  name: [Function],
  parallelism: [Function],
  profile: [Function],
  recordsInputPath: [Function],
  recordsPath: [Function],
  recordsOutputPath: [Function],
  stats: [Function],
  target: [Function],
  watch: [Function],
  watchOptions: [Function]
}